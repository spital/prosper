name: Darwin Image
on:
  workflow_dispatch: ~

jobs:
  build_darwin_docker_image:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache fyne-cross
        uses: actions/cache@v1
        env:
          cache-name: cache-fyne-cross
        with:
          path: ~/.cache/fyne-cross
          key: ${{ runner.os }}-fyne-cross-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-fyne-cross-

      - name: cache xcode cli tools
        id: xcode-cli-tools-cache
        uses: actions/cache@v1
        env:
          cache-name: cache-cli_tools_13.2
        with:
          path: ~/.cache/xcode
          key: ${{ runner.os }}-cli_tools_13.2
          restore-keys: |
            ${{ runner.os }}-cli_tools_13.2

      - name: cache docker
        id: docker-cache
        uses: actions/cache@v1
        env:
          cache-name: cache-docker
        with:
          path: |
            ~/.cache/docker
          key: ${{ runner.os }}-docker-v1-cli_tools_13.2
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: get fyne-cross
        if: steps.go-deps.outputs.cache-hit != 'true'
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest
          go install github.com/fyne-io/fyne-cross@latest

      - name: get xcode cli tools
        if: steps.xcode-cli-tools-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.cache/xcode
          cd ~/.cache/xcode && wget ${{secrets.REMOTE_HOST}}/files/Command_Line_Tools_for_Xcode_13.2.dmg?token=${{secrets.SRV_TOKEN}}

      - name: get brew deps
        run: |
          brew install upx
          brew install docker
          brew install colima

      - name: start colima
        run: |
          colima start

      - name: build image
        if: steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          fyne-cross darwin-image --xcode-path ~/.cache/xcode/Command_Line_Tools_for_Xcode_13.2.dmg
          mkdir -p ~/.cache/docker
          cd ~/.cache/docker && docker save fyneio/fyne-cross:1.1-darwin | gzip > fyne-cross-1.1-darwin.tar.gz

      - name: send image
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: |
          cd ~/.cache/docker && curl -Ffile=@fyne-cross-1.1-darwin.tar.gz ${{secrets.REMOTE_HOST}}/upload?token=${{secrets.SRV_TOKEN}}
